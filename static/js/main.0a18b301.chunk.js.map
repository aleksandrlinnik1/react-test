{"version":3,"sources":["components/Header/Nav/NavItem/NavItem.module.css","components/Header/Header.module.css","components/Header/Nav/Nav.module.css","components/Header/Logo/Logo.module.css","components/Home/Home.module.css","components/Employees/Employees.module.css","components/Employees/Employee/Employee.module.css","components/Employees/NewEmpoloyee/NewEmployee.module.css","components/Footer/Footer.module.css","serviceWorker.js","components/Header/Nav/NavItem/NavItem.jsx","components/Header/Nav/Nav.jsx","components/Header/Logo/Logo.jsx","components/Header/Header.jsx","components/Home/Home.jsx","state/employees.js","components/Employees/Employee/Employee.jsx","components/Employees/NewEmpoloyee/NewEmployee.jsx","components/Employees/Employees.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","NavItem","props","className","s","item","to","path","activeClassName","activeLink","name","Nav","nav","Logo","logo","Header","header","Home","home","EmployeesContext","createContext","useEmployees","useContext","EmployeesProvider","children","useState","employees","setEmployees","value","deleteEmployee","id","prev","filter","e","addEmployee","first_name","Math","random","toString","substr","email","last_name","avatar","useEffect","fetch","then","r","json","data","Provider","Employee","employeeName","onClick","NewEmployees","setValue","type","placeholder","onChange","target","Employees","NewEmployee","map","key","Footer","footer","App","exact","render","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a18b301.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavItem_item__25LXF\",\"activeLink\":\"NavItem_activeLink__2i9vV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eCg5\",\"ul\":\"Header_ul__2pal9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1-zOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__GV18W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__Odzrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees\":\"Employees_employees__3aokI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeName\":\"Employee_employeeName__3NokE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addEmployee\":\"NewEmployee_addEmployee__Nw3Vf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3eiYF\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport s from \"./NavItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavItem = (props) => {\n  return (\n    <div className={s.item}>\n      <NavLink to={props.path} activeClassName={s.activeLink}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NavItem;\n","import React from \"react\";\nimport s from \"./Nav.module.css\";\nimport NavItem from \"./NavItem/NavItem\";\n\nconst Nav = () => {\n  return (\n    <nav className={s.nav}>\n      <NavItem path={\"/home\"} name={\"Home\"} />\n      <NavItem path={\"/employees\"} name={\"Employees\"} />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport s from \"./Logo.module.css\";\n\nconst Logo = () => {\n  return <div className={s.logo}>Logo</div>;\n};\nexport default Logo;\n","import React from \"react\";\nimport s from \"./Header.module.css\";\nimport Nav from \"./Nav/Nav\";\nimport Logo from \"./Logo/Logo\";\n\nconst Header = () => {\n  return (\n    <header className={s.header}>\n      <Logo />\n      <Nav />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Home.module.css\";\n\nconst Home = () => <div className={s.home}>CONTENT HOME</div>;\n\nexport default Home;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nexport const EmployeesContext = createContext({});\n\nexport const useEmployees = () => useContext(EmployeesContext);\n\nconst randId = () => Math.random().toString(36).substr(2, 9);\n\nexport const EmployeesProvider = ({ children }) => {\n  const [employees, setEmployees] = useState([]);\n\n  const deleteEmployee = (id) => {\n    setEmployees((prev) => prev.filter((e) => e.id !== id));\n  };\n\n  const addEmployee = (first_name) => {\n    setEmployees((prev) => [\n      {\n        id: randId(),\n        first_name,\n        email: \"\",\n        last_name: \"\",\n        avatar: \"\",\n      },\n      ...prev,\n    ]);\n  };\n\n  const value = { employees, deleteEmployee, addEmployee };\n\n  useEffect(() => {\n    fetch(\"https://reqres.in/api/users?per_page=12\")\n      .then((r) => r.json())\n      .then(({ data }) => setEmployees(data));\n  }, []);\n\n  return (\n    <EmployeesContext.Provider value={value}>\n      {children}\n    </EmployeesContext.Provider>\n  );\n};\n","import React from \"react\";\nimport s from \"./Employee.module.css\";\nimport { useEmployees } from \"../../../state/employees\";\n\nconst Employee = ({ name, id }) => {\n  const { deleteEmployee } = useEmployees();\n\n  return (\n    <div className={s.employeeName}>\n      {name}\n      <button onClick={() => deleteEmployee(id)}>DELETE</button>\n    </div>\n  );\n};\nexport default Employee;\n","import React, { useState } from \"react\";\nimport s from \"./NewEmployee.module.css\";\nimport { useEmployees } from \"../../../state/employees\";\n\nconst NewEmployees = () => {\n  const { addEmployee } = useEmployees();\n  const [value, setValue] = useState(\"\");\n\n  const handleOnClick = () => {\n    if (!value) {\n      return;\n    }\n    addEmployee(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div className={s.addEmployee}>\n      <p>Add an employee:</p>\n      <input\n        type={\"text\"}\n        placeholder={\"Name\"}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button onClick={handleOnClick}>ADD</button>\n    </div>\n  );\n};\n\nexport default NewEmployees;\n","import React from \"react\";\nimport s from \"./Employees.module.css\";\nimport Employee from \"./Employee/Employee\";\nimport NewEmployee from \"./NewEmpoloyee/NewEmployee\";\nimport { useEmployees } from \"../../state/employees\";\n\nconst Employees = () => {\n  const { employees } = useEmployees();\n\n  return (\n    <div className={s.employees}>\n      <NewEmployee />\n      {employees.map(({ id, first_name }) => (\n        <Employee key={id} id={id} name={first_name} />\n      ))}\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport s from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return <div className={s.footer}>Footer 2020</div>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport Employees from \"./components/Employees/Employees\";\nimport Footer from \"./components/Footer/Footer\";\nimport { HashRouter, Route, Redirect } from \"react-router-dom\";\nimport { EmployeesProvider } from \"./state/employees\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <EmployeesProvider>\n        <div className=\"wrapper\">\n          <Header />\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/employees\" component={Employees} />\n          <Footer />\n        </div>\n      </EmployeesProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import * as serviceWorker from \"./serviceWorker\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}